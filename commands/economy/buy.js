const { loadData, saveData } = require('../../utils/dataUtils');
const shop = require('../../shop.json'); // ƒê·∫£m b·∫£o c√≥ file shop.json ch·ª©a danh s√°ch v·∫≠t ph·∫©m
const bankPath = './bank.json';

module.exports = {
    name: 'mua',
    description: 'Mua v·∫≠t ph·∫©m trong c·ª≠a h√†ng',
    execute(message, args) {
        let userId = message.author.id; // L·∫•y UID t·ª´ ng∆∞·ªùi d√πng g·ª≠i l·ªánh
        let bank;

        // ƒê·ªçc d·ªØ li·ªáu ng√¢n h√†ng
        try {
            bank = loadData(bankPath);
        } catch (err) {
            return message.reply("‚ö† L·ªói khi ƒë·ªçc d·ªØ li·ªáu ng√¢n h√†ng! H√£y b√°o cho admin.");
        }

        // Ki·ªÉm tra n·∫øu user ch∆∞a c√≥ t√†i kho·∫£n ng√¢n h√†ng
        if (!bank.accounts || !bank.accounts[userId]) {
            return message.reply("üö´ B·∫°n ch∆∞a ƒëƒÉng k√Ω ng√¢n h√†ng! D√πng `!dangkybank` ƒë·ªÉ t·∫°o t√†i kho·∫£n.");
        }

        let account = bank.accounts[userId]; // L·∫•y d·ªØ li·ªáu t√†i kho·∫£n c·ªßa user
        let itemIcon = args.join(' '); // L·∫•y icon v·∫≠t ph·∫©m t·ª´ l·ªánh
        let item = shop.find(i => i.icon === itemIcon); // T√¨m v·∫≠t ph·∫©m trong shop d·ª±a tr√™n icon

        // Ki·ªÉm tra v·∫≠t ph·∫©m t·ªìn t·∫°i trong c·ª≠a h√†ng
        if (!item) return message.reply("‚ùå V·∫≠t ph·∫©m kh√¥ng t·ªìn t·∫°i trong c·ª≠a h√†ng!");

        // Ki·ªÉm tra s·ªë d∆∞ t√†i kho·∫£n ng∆∞·ªùi d√πng c√≥ ƒë·ªß ti·ªÅn kh√¥ng
        if (account.balance < item.price) return message.reply("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ mua v·∫≠t ph·∫©m n√†y!");

        // ƒê·∫£m b·∫£o user c√≥ danh s√°ch items n·∫øu ch∆∞a c√≥
        if (!account.items) account.items = [];

        // Tr·ª´ ti·ªÅn v√† th√™m v·∫≠t ph·∫©m v√†o kho c·ªßa ng∆∞·ªùi d√πng
        account.balance -= item.price;
        account.items.push(item.name);

        // L∆∞u l·∫°i d·ªØ li·ªáu ng√¢n h√†ng
        try {
            saveData(bankPath, bank);
        } catch (err) {
            return message.reply("‚ö† L·ªói khi l∆∞u d·ªØ li·ªáu! H√£y b√°o cho admin.");
        }

        // Th√¥ng b√°o giao d·ªãch th√†nh c√¥ng
        message.reply(`‚úÖ B·∫°n ƒë√£ mua **${item.icon} ${item.name}** th√†nh c√¥ng v·ªõi gi√° **${item.price.toLocaleString()}üíµ** v√† nh·∫≠n ƒë∆∞·ª£c **${item.affinity}‚ù§Ô∏è**!`);
    }
};
